set schema FN71600?

CREATE TABLE AIRLINES
(
    CODE CHAR(2) NOT NULL PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL
)?

/*
За следващата таблица взимам под предвид няколко неща, които добавям
- цената да има максимално 9 символа в себе си (включително и точката)
- стойностите в отделните класи да имат стойност по подразбиране 0
и да не могат да са NULL (един самолет може да няма дадена класа и това
се определя дали е 0 или има някаква стойност <> 0)
ПРЕГЛЕДАЙ ВСИЧКИ ВЪНШНИ ВРЪЗКИ КАК ЩЕ ГИ ТРИЕШ
*/
DROP TABLE FN71600.FLIGHTS ?
CREATE TABLE FN71600.FLIGHTS
(
    AIRLINE_CODE CHAR(2) NOT NULL REFERENCES AIRLINES(CODE), -- прави се външен ключ към CODE, който е първиче за AIRLINES
    FLIGHT_NUMBER SMALLINT NOT NULL PRIMARY KEY CHECK(FLIGHT_NUMBER >= 1000 AND FLIGHT_NUMBER <= 9999), -- ЗАДА Е 4-ЦИФРЕНО   
    FLIGHT_DATE DATE NOT NULL,
    PRICE DECIMAL(9,2) NOT NULL, -- МАКСИМАЛНО 999999,99
    CURRENCY CHAR(3) NOT NULL DEFAULT 'EUR',
    MAX_ECON_CAP SMALLINT NOT NULL DEFAULT 0 CHECK(MAX_ECON_CAP >= 0),
    OCC_ECON_CAP SMALLINT NOT NULL DEFAULT 0 CHECK(OCC_ECON_CAP >= 0), -- AND OCC_ECON_CAP <= MAX_ECON_CAP),
    MAX_BUSS_CAP SMALLINT NOT NULL DEFAULT 0 CHECK(MAX_BUSS_CAP >= 0),
    OCC_BUSS_CAP SMALLINT NOT NULL DEFAULT 0 CHECK(OCC_BUSS_CAP >= 0), -- AND OCC_BUSS_CAP <= MAX_BUSS_CAP),
    PAYMENTSUM DECIMAL(16, 2) NOT NULL DEFAULT 0.00
)?
DROP TABLE SCHEDULES?
CREATE TABLE SCHEDULES
(
    AIRLINE_CODE CHAR(2) NOT NULL REFERENCES AIRLINES(CODE),
    FLIGHT_NUMBER SMALLINT NOT NULL REFERENCES FLIGHTS(FLIGHT_NUMBER)CHECK(FLIGHT_NUMBER >= 1000 AND FLIGHT_NUMBER <= 9999),
    DEPT_COUNTRY CHAR(2) NOT NULL,
    DEPT_CITY VARCHAR(20) NOT NULL,
    DEPT_AIRPORT CHAR(3) NOT NULL,
    DEPT_TIME DATE NOT NULL,
    ARRV_COUNTRY CHAR(2) NOT NULL,
    ARRV_CITY VARCHAR(20) NOT NULL,
    ARRV_AIRPORT CHAR(3) NOT NULL,
    ARRV_TIME DATE NOT NULL, -- CHECK(ARRV_TIME >= DEPT_TIME), -- ДАТИТЕ ТРЯБВА ИЛИ ДА СЪВПАДАТ ИЛИ ЕДНАТА ДА Е В БЪДЕЩЕТО
    FLIGHT_TIME SMALLINT CHECK(FLIGHT_TIME > 0),
    DISTANCE SMALLINT CHECK(DISTANCE > 0)
)?
ALTER TABLE SCHEDULES
	ADD CONSTRAINT PK_COMPOSE
	PRIMARY KEY (AIRLINE_CODE, FLIGHT_NUMBER) ?
	
CREATE TABLE BOOKINGS
(
    AIRLINE_CODE CHAR(2) REFERENCES AIRLINES(CODE),
    FLIGHT_NUMBER SMALLINT REFERENCES FLIGHTS(FLIGHT_NUMBER), -- ??? ВИЖ ДАЛИ ТРЯБВА ДА ПРАВИШ ПАК ПРОВЕРКА ЗА ЧЕТИРИЦИФРЕНО ЧИСЛО ИЛИ СЕ ХВАЩА ОТ REFERENCES
    BOOKING_NUMBER INT NOT NULL PRIMARY KEY CHECK (BOOKING_NUMBER >= 10000000 AND BOOKING_NUMBER <= 99999999),
    CUSTOMER_NUMBER INT NOT NULL CHECK (CUSTOMER_NUMBER >= 10000000 AND CUSTOMER_NUMBER <= 99999999),
    ORDER_DATE DATE NOT NULL -- Виж как ще направиш правилото тук 
)?

DROP TRIGGER CHECK_ORDER_DATE?
-- triggers for updates
CREATE TRIGGER CHECK_ORDER_DATE
    BEFORE UPDATE OF ORDER_DATE ON BOOKINGS
    REFERENCING OLD AS OLD_BOOKING
    NEW AS NEW_BOOKING
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_BOOKING.ORDER_DATE > (
        SELECT SC.DEPT_TIME
        FROM SCHEDULES SC
        WHERE NEW_BOOKING.FLIGHT_NUMBER = SC.FLIGHT_NUMBER
        AND NEW_BOOKING.AIRLINE_CODE = SC.AIRLINE_CODE
    ))
    BEGIN ATOMIC 
        SIGNAL SQLSTATE '75006'
            ('INVALID BOOKING ORDER DATE TO DEPT_TIME');
    END ?
    
-- AND ONE FOR ORDER_DATE TO FLIGHT_DATE
CREATE TRIGGER CHECK_ORDER_DATE_TO_FLIGHT_DATE
    BEFORE UPDATE OF ORDER_DATE ON BOOKINGS
    REFERENCING OLD AS OLD_BOOKING
    NEW AS NEW_BOOKING
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_BOOKING.ORDER_DATE > (
        SELECT FS.FLIGHT_DATE
        FROM FLIGHTS FS
        WHERE NEW_BOOKING.FLIGHT_NUMBER = FS.FLIGHT_NUMBER
        AND NEW_BOOKING.AIRLINE_CODE = FS.AIRLINE_CODE
    ))
    BEGIN ATOMIC 
        SIGNAL SQLSTATE '75005'
            ('INVALID BOOKING ORDER_DATE TO FLIGHT_TIME');
    END ?
    
-- TRIGGERS FOR THAT OCC CAN'T GO ABOVE MAX ]
CREATE TRIGGER CHECK_OCC_TO_MAX
    BEFORE UPDATE OF MAX_ECON_CAP ON FN71600.FLIGHTS
    REFERENCING OLD AS OLD_FLIGHTS
    NEW AS NEW_FLIGHTS
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_FLIGHTS.MAX_ECON_CAP < NEW_FLIGHTS.OCC_ECON_CAP)
    BEGIN ATOMIC 
        SIGNAL SQLSTATE '75007'
            ('INVALID VALUE FOR MAX_ECON_CAP, MUST BE BIGGER THAN OCC_ECON_CAP');
    END ?
    
CREATE TRIGGER CHECK_OCC_TO_MAX_BUSS
    BEFORE UPDATE OF MAX_BUSS_CAP ON FN71600.FLIGHTS
    REFERENCING OLD AS OLD_FLIGHTS
    NEW AS NEW_FLIGHTS
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_FLIGHTS.MAX_BUSS_CAP < NEW_FLIGHTS.OCC_BUSS_CAP)
    BEGIN ATOMIC 
        SIGNAL SQLSTATE '75007'
            ('INVALID VALUE FOR MAX_BUSS_CAP, MUST BE BIGGER THAN OCC_BUSS_CAP');
    END ?
    
-- TRIGGERS FOR ARRIVING AND DEPT TIME
CREATE TRIGGER FN71600.CHECK_ARR_TO_DEPT
    BEFORE UPDATE OF ARRV_TIME, DEPT_TIME ON FN71600.SCHEDULES
    REFERENCING OLD AS OLD_SCHEDULES
    NEW AS NEW_SCHEDULES
    FOR EACH ROW MODE DB2SQL
    WHEN (NEW_SCHEDULES.ARRV_TIME < NEW_SCHEDULES.DEPT_TIME)
    BEGIN ATOMIC 
        SIGNAL SQLSTATE '75008'
            ('INVALID VALUE FOR ARRV_TIME, MUST BE IN THE FUTURE TO DEPT_TIME');
    END ?
    
-- triggers for insert
   CREATE TRIGGER FN71600.CHECK_ARR_TO_DEPT_FROM_INSERT
      BEFORE INSERT ON FN71600.SCHEDULES
      FOR EACH ROW MODE DB2SQL
      WHEN (FN71600.SCHEDULES.ARRV_TIME < FN71600.SCHEDULES.DEPT_TIME)
      BEGIN ATOMIC
       SIGNAL SQLSTATE '75008'
            ('INVALID VALUE FOR ARRV_TIME, MUST BE IN THE FUTURE TO DEPT_TIME');
      END?
--CREATE TRIGGER CHECK_ORDER_DATE_AFTER_INSERT
--    AFTER INSERT ON BOOKINGS
--    FOR EACH ROW MODE DB2SQL
--    WHEN (ORDER_DATE <= (
--        SELECT SC.DEPT_TIME
--        FROM SCHEDULES SC
--        WHERE FLIGHT_NUMBER = SC.FLIGHT_NUMBER
--        AND AIRLINE_CODE = SC.AIRLINE_CODE
--    ))
--    BEGIN ATOMIC 
--        SIGNAL SQLSTATE '75006'
--            ('INVALID BOOKING ORDER DATE TO DEPT_TIME');
--    END?
INSERT INTO FN71600.AIRLINES
VALUES ('00', 'ZUVV')?

SELECT *
FROM FN71600.AIRLINES?

INSERT INTO FN71600.FLIGHTS
VALUES ('00', 1234, '2017-12-26', 0, 'EUR', 0, 0, 0, 0, 0)?

UPDATE FN71600.FLIGHTS
SET PRICE = 50.6,
	MAX_ECON_CAP = 100,
	OCC_ECON_CAP = 10,
	MAX_BUSS_CAP = 50,
	OCC_BUSS_CAP = 10
WHERE AIRLINE_CODE = '00'?

SELECT *
FROM FN71600.FLIGHTS?

INSERT INTO FN71600.SCHEDULES
VALUES ('00', 1234, 'BG', 'SOF', 'SOF', '2017-12-27', 'EN', 'LON', 'L1', '2017-12-27', 126, 1595)?

UPDATE FN71600.SCHEDULES
SET DEPT_TIME = '2017-12-27'
WHERE AIRLINE_CODE = '00'?

SELECT *
FROM FN71600.SCHEDULES ?

INSERT INTO FN71600.BOOKINGS
VALUES ('00', 1234, 12345678, 87654321, '2017-12-26')?

SELECT *
FROM FN71600.BOOKINGS?

UPDATE FN71600.BOOKINGS
SET ORDER_DATE = '2017-12-29'
WHERE AIRLINE_CODE = '00'?
